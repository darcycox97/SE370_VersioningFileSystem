Darcy Cox / dcox740 / 973248899

Output from performing the specified operations while the versionfs program is active.

1. 
Input:
echo "one1" > mount/one.txt

Output:
** create: /one.txt **
** flush /one.txt **
** write: /one.txt **
** flush /one.txt **
** release /one.txt **

2.
Input:
cp mount/one.txt mount/two.txt

Output:
** open: /one.txt **
** open: /two.txt **
** truncate: /two.txt **
** read: /one.txt **
** write: /two.txt **
** flush /two.txt **
** release /two.txt **
** flush /one.txt **
** release /one.txt **

3. 
Input:
cat mount/two.txt

Output:
** open: /two.txt **
** read: /two.txt **
** flush /two.txt **
** release /two.txt **

4.
Input:
cat mount/one.txt mount/two.txt > mount/three.txt

Output:
** create: /three.txt **
** flush /three.txt **
** open: /one.txt **
** read: /one.txt **
** write: /three.txt **
** flush /one.txt **
** release /one.txt **
** open: /two.txt **
** read: /two.txt **
** write: /three.txt **
** flush /two.txt **
** release /two.txt **
** flush /three.txt **
** release /three.txt **

5.
Input:
nano mount/three.txt (then add and delete some text, save it, then shut down the program)

Output:
** create: /.three.txt.swp **
** write: /.three.txt.swp **
** flush /.three.txt.swp **
** release /.three.txt.swp **
** open: /three.txt **
** read: /three.txt **
** flush /three.txt **
** release /three.txt **
** open: /three.txt **
** flush /three.txt **
** release /three.txt **
** create: /.three.txt.swp **
** write: /.three.txt.swp **
** flush /.three.txt.swp **
** release /.three.txt.swp **
** open: /three.txt **
** truncate: /three.txt **
** write: /three.txt **
** flush /three.txt **
** release /three.txt **


##########################################

Discuss the pros and cons of deleting all versions if a file is deleted in the mount directory:

If all versions are deleted, this means that the file / history of the file is not recoverable.
For example if a user accidentally deleted a file they will have no way of getting it back. However, the file
system will be using the space most efficiently as no obsolete files will be kept in the cases that a file was
purposefully deleted.

If all versions are kept this will be good in cases where files are deleted by accident, as they will be easily recoverable.
However, if the file system is being used extensively, and the user intends to delete files permanently, there will be a lot of 
obsolete data that was intended to be deleted, which is using storage very in-efficiently.

Whichever option is best probably depends on how the file system is intended to be used. If it is to generally be used by people then
it would be good to have the recoverability benefit of keeping versions of deleted files. If the file is to be largely used by automation
then the chances of an accidental deletion are much lower and it is probably best to delete version files along with the files.
